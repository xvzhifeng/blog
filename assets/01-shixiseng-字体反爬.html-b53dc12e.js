import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as i,c as u,b as a,d as t,f as p,a as n}from"./app-4e9ca916.js";const l="/assets/image-20231204231415549-7f4eb756.png",k="/assets/image-20231204231721156-e6b9bb60.png",r="/assets/image-20231204231816718-8e0fa928.png",d="/assets/image-20231204232103035-90d4c845.png",v={},m=n('<h1 id="_01-字体反爬-shixiseng" tabindex="-1"><a class="header-anchor" href="#_01-字体反爬-shixiseng" aria-hidden="true">#</a> 01-字体反爬-shixiseng</h1><p>前言：</p><p>练习字体反爬</p><h2 id="_1、网站分析" tabindex="-1"><a class="header-anchor" href="#_1、网站分析" aria-hidden="true">#</a> 1、网站分析</h2><p>网站：</p><p><code>YUhSMGNITTZMeTkzZDNjdWMyaHBlR2x6Wlc1bkxtTnZiUzlwYm5SbGNtNXpQM0JoWjJVOU1TWjBlWEJsUFdsdWRHVnliaVpyWlhsM2IzSmtQU1ZGTkNWQ1FTVkJOeVZGTlNVNU15VTRNU1poY21WaFBTWnRiMjUwYUhNOU1TWmtZWGx6UFNaa1pXZHlaV1U5Sm05bVptbGphV0ZzUFNabGJuUmxjbkJ5YVhObFBTWnpZV3hoY25rOUxUQW1jSFZpYkdsemFGUnBiV1U5Sm5OdmNuUlVlWEJsUFNaamFYUjVQU1ZGTlNVNE5TVkJPQ1ZGTlNVNVFpVkNSQ1pwYm5SbGNtNUZlSFJsYm1ROQ==</code></p><figure><img src="'+l+'" alt="image-20231204231415549" tabindex="0" loading="lazy"><figcaption>image-20231204231415549</figcaption></figure><p>页面中关于，薪资浮动区间等值，是以<code>&amp;#xf46a&amp;#xe18d&amp;#xe18d</code>等符号展示</p><figure><img src="'+k+'" alt="image-20231204231721156" tabindex="0" loading="lazy"><figcaption>image-20231204231721156</figcaption></figure><p>在页面中可以找到如上样式，点击到具体的css文件目录</p><figure><img src="'+r+'" alt="image-20231204231816718" tabindex="0" loading="lazy"><figcaption>image-20231204231816718</figcaption></figure><p>找到文件后，直接搜索class关键字<code>myFont</code>可以找到对应的字体文件。</p>',12),b={href:"http://www.fontcreator.com/%E6%89%93%E5%BC%80",target:"_blank",rel:"noopener noreferrer"},g=n('<figure><img src="'+d+`" alt="image-20231204232103035" tabindex="0" loading="lazy"><figcaption>image-20231204232103035</figcaption></figure><p>即可看到对应的字体信息。</p><h2 id="_2、还原字体信息" tabindex="-1"><a class="header-anchor" href="#_2、还原字体信息" aria-hidden="true">#</a> 2、还原字体信息</h2><p>安装所需包</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pip install fontTools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>读取字体信息，显示</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>f_obj <span class="token operator">=</span> TTFont<span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span>
m_dict <span class="token operator">=</span> f_obj<span class="token punctuation">.</span>getBestCmap<span class="token punctuation">(</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>m_dict<span class="token punctuation">)</span>
<span class="token comment"># 输出信息如下，可以看到字体的对应关系</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
{120: &#39;x&#39;, 57346: &#39;uni36&#39;, 57368: &#39;uni66&#39;, 57471: &#39;uni94F6&#39;, 57477: &#39;uni69&#39;, 57494: &#39;uni50&#39;, 57632: &#39;uni56&#39;, 57775: &#39;uni43&#39;, 57827: &#39;uni4E09&#39;, 57883: &#39;uni74&#39;, 58043: &#39;uni54&#39;, 58053: &#39;uni65&#39;, 58099: &#39;uni71&#39;, 58110: &#39;uni34&#39;, 58248: &#39;uni78&#39;, 58313: &#39;uni45&#39;, 58331: &#39;uni8054&#39;, 58340: &#39;uni5E7F&#39;, 58435: &#39;uni5468&#39;, 58514: &#39;uni64&#39;, 58683: &#39;uni7F51&#39;, 58690: &#39;uni8F6F&#39;, 58696: &#39;uni51&#39;, 58794: &#39;uni8BA1&#39;, 58839: &#39;uni4f&#39;, 58841: &#39;uni72&#39;, 58887: &#39;uni57&#39;, 59096: &#39;uni79&#39;, 59212: &#39;uni7A0B&#39;, 59285: &#39;uni6a&#39;, 59364: &#39;uni68&#39;, 59401: &#39;uni77&#39;, 59492: &#39;uni75&#39;, 59562: &#39;uni4E8C&#39;, 59587: &#39;uni4a&#39;, 59594: &#39;uni4E92&#39;, 59837: &#39;uni6e&#39;, 59889: &#39;uni524D&#39;, 59982: &#39;uni884C&#39;, 60038: &#39;uni46&#39;, 60055: &#39;uni7AEF&#39;, 60065: &#39;uni653F&#39;, 60143: &#39;uni4e&#39;, 60203: &#39;uni42&#39;, 60248: &#39;uni544A&#39;, 60322: &#39;uni44&#39;, 60341: &#39;uni8D22&#39;, 60352: &#39;uni67&#39;, 60362: &#39;uni56DB&#39;, 60414: &#39;uni32&#39;, 60630: &#39;uni53&#39;, 60639: &#39;uni73&#39;, 60646: &#39;uni38&#39;, 60742: &#39;uni6d&#39;, 60782: &#39;uni37&#39;, 60958: &#39;uni62DB&#39;, 61021: &#39;uni31&#39;, 61050: &#39;uni59&#39;, 61106: &#39;uni58&#39;, 61139: &#39;uni63&#39;, 61149: &#39;uni573A&#39;, 61208: &#39;uni7a&#39;, 61235: &#39;uni48&#39;, 61253: &#39;uni5a&#39;, 61315: &#39;uni76&#39;, 61324: &#39;uni62&#39;, 61370: &#39;uni751F&#39;, 61376: &#39;uni61&#39;, 61388: &#39;uni49&#39;, 61402: &#39;uni6c&#39;, 61469: &#39;uni4E2A&#39;, 61483: &#39;uni4d&#39;, 61505: &#39;uni4EBA&#39;, 61551: &#39;uni4c&#39;, 61597: &#39;uni4F5C&#39;, 61623: &#39;uni4F1A&#39;, 61633: &#39;uni8BBE&#39;, 61726: &#39;uni55&#39;, 62008: &#39;uni6f&#39;, 62019: &#39;uni30&#39;, 62048: &#39;uni6708&#39;, 62070: &#39;uni70&#39;, 62098: &#39;uni5E08&#39;, 62107: &#39;uni4E00&#39;, 62113: &#39;uni6b&#39;, 62171: &#39;uni4b&#39;, 62221: &#39;uni5DE5&#39;, 62375: &#39;uni5929&#39;, 62382: &#39;uni33&#39;, 62397: &#39;uni8058&#39;, 62431: &#39;uni4EF6&#39;, 62502: &#39;uni47&#39;, 62543: &#39;uni41&#39;, 62656: &#39;uni35&#39;, 62799: &#39;uni4E94&#39;, 62866: &#39;uni5E02&#39;, 63477: &#39;uni39&#39;, 63479: &#39;uni5E74&#39;, 63613: &#39;uni52&#39;}
&quot;&quot;&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于文中<code>&amp;#xf46a&amp;#xe18d&amp;#xe18d</code></p><p>可以看出单个字体的变化关系如下：</p>`,9),q=n(`<p>同时需要将uni36转码,并且将字体map信息存入字典当中备用</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token keyword">def</span> <span class="token function">convert</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        f_obj <span class="token operator">=</span> TTFont<span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span>
        m_dict <span class="token operator">=</span> f_obj<span class="token punctuation">.</span>getBestCmap<span class="token punctuation">(</span><span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>m_dict<span class="token punctuation">)</span>
        <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> m_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> v<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;uni&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>font<span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;\\\\u00&#39;</span> <span class="token operator">+</span> v<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;unicode_escape&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>font<span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;\\\\u&#39;</span> <span class="token operator">+</span> v<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;unicode_escape&#39;</span><span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>self<span class="token punctuation">.</span>font<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写json中每个值得转换逻辑</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>        <span class="token keyword">def</span> <span class="token function">convert_font</span><span class="token punctuation">(</span>jd<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> jd<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token comment"># logger.debug(str(type(v)))</span>
                <span class="token keyword">if</span> <span class="token string">&#39;dict&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    jd<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> convert_font<span class="token punctuation">(</span>v<span class="token punctuation">)</span>
                <span class="token keyword">elif</span> <span class="token string">&#39;list&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                    <span class="token keyword">for</span> s <span class="token keyword">in</span> v<span class="token punctuation">:</span>
                        <span class="token keyword">if</span> <span class="token string">&#39;dict&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>convert_font<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token comment"># elif &#39;list&#39; in str(type(s)):</span>
                        <span class="token comment">#     temp.append(s)</span>
                        <span class="token keyword">elif</span> <span class="token string">&#39;str&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token string">&#39;&amp;#&#39;</span> <span class="token keyword">in</span> s<span class="token punctuation">:</span>
                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>secret2mw<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">else</span><span class="token punctuation">:</span>
                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
                    jd<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp
                <span class="token keyword">elif</span> <span class="token string">&#39;str&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    temp <span class="token operator">=</span> v
                    <span class="token keyword">if</span> <span class="token string">&quot;&amp;#&quot;</span> <span class="token keyword">in</span> v<span class="token punctuation">:</span>
                        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>secret2mw<span class="token punctuation">(</span>v<span class="token punctuation">)</span>
                    <span class="token comment"># logger.debug(temp)</span>
                    jd<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp
            <span class="token keyword">return</span> jd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整代码如下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict
<span class="token keyword">from</span> copy <span class="token keyword">import</span> deepcopy

<span class="token keyword">import</span> requests
<span class="token keyword">from</span> fontTools<span class="token punctuation">.</span>ttLib <span class="token keyword">import</span> TTFont
<span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger


<span class="token keyword">class</span> <span class="token class-name">Shixisheng</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> keywords<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>keywords <span class="token operator">=</span> keywords
        self<span class="token punctuation">.</span>font <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>get_font_file<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_font_file</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;authority&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;www.shixiseng.com&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;*/*&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;accept-language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;cache-control&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;origin&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://www.shixiseng.com&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;pragma&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;referer&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://www.shixiseng.com/interns?page=1&amp;type=intern&amp;keyword=^%^E4^%^BA^%^A7^%^E5^%^93^%^81&amp;area=&amp;months=1&amp;days=&amp;degree=&amp;official=&amp;enterprise=&amp;salary=-0&amp;publishTime=&amp;sortType=&amp;city=^%^E5^%^85^%^A8^%^E5^%^9B^%^BD&amp;internExtend=&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sec-ch-ua&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;^\\\\^Not_A&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sec-ch-ua-mobile&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;?0&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sec-ch-ua-platform&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;^\\\\^Windows^^&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sec-fetch-dest&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;font&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sec-fetch-mode&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cors&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sec-fetch-site&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;same-origin&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;user-agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36&quot;</span>
        <span class="token punctuation">}</span>
        cookies <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;utm_source_first&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;PC&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;__jsluid_s&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1d0de6ed5446d1e00cbc58f99a0f2383&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;utm_source&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;PC&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;utm_campaign&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;PC&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;position&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pc_default&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Hm_lvt_03465902f492a43ee3eb3543d81eba55&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1701686622,1701691205&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Hm_lpvt_03465902f492a43ee3eb3543d81eba55&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1701691205&quot;</span>
        <span class="token punctuation">}</span>
        url <span class="token operator">=</span> <span class="token string">&quot;https://www.shixiseng.com/interns/iconfonts/file&quot;</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;rand&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;0.8195871590231047&quot;</span>
        <span class="token punctuation">}</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span>

        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
        <span class="token comment"># print(response.text)</span>
        <span class="token comment"># print(response)</span>

    <span class="token keyword">def</span> <span class="token function">convert</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        f_obj <span class="token operator">=</span> TTFont<span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span>
        m_dict <span class="token operator">=</span> f_obj<span class="token punctuation">.</span>getBestCmap<span class="token punctuation">(</span><span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>m_dict<span class="token punctuation">)</span>
        <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> m_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> v<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;uni&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>font<span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;\\\\u00&#39;</span> <span class="token operator">+</span> v<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;unicode_escape&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>font<span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;\\\\u&#39;</span> <span class="token operator">+</span> v<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;unicode_escape&#39;</span><span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>self<span class="token punctuation">.</span>font<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_position_info_raw_data</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>

        <span class="token keyword">for</span> keyword <span class="token keyword">in</span> self<span class="token punctuation">.</span>keywords<span class="token punctuation">:</span>
            headers <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;authority&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;www.shixiseng.com&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json, text/plain, */*&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;accept-language&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;cache-control&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;content-type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;pragma&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;referer&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;https://www.shixiseng.com/interns?keyword=%E4%BA%A7%E5%93%81&amp;city=%E5%85%A8%E5%9B%BD&amp;type=intern&amp;from=menu&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sec-ch-ua&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;\\&quot;Not_A Brand\\&quot;;v=\\&quot;8\\&quot;, \\&quot;Chromium\\&quot;;v=\\&quot;120\\&quot;, \\&quot;Google Chrome\\&quot;;v=\\&quot;120\\&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sec-ch-ua-mobile&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;?0&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sec-ch-ua-platform&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;\\&quot;Windows\\&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sec-fetch-dest&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;empty&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sec-fetch-mode&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cors&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sec-fetch-site&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;same-origin&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;user-agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36&quot;</span>
            <span class="token punctuation">}</span>
            cookies <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;utm_source_first&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;PC&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;__jsluid_s&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1d0de6ed5446d1e00cbc58f99a0f2383&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;utm_source&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;PC&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;utm_campaign&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;PC&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;position&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pc_default&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;Hm_lvt_03465902f492a43ee3eb3543d81eba55&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1701686622,1701691205&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;Hm_lpvt_03465902f492a43ee3eb3543d81eba55&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1701691205&quot;</span>
            <span class="token punctuation">}</span>
            url <span class="token operator">=</span> <span class="token string">&quot;https://www.shixiseng.com/app/interns/search/v2&quot;</span>
            params <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;build_time&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1701691219259&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;page&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;intern&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">:</span> keyword<span class="token punctuation">,</span>
                <span class="token string">&quot;area&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;months&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;days&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;degree&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;official&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;enterprise&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;salary&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;-0&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;sortType&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;全国&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;internExtend&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>
            <span class="token punctuation">}</span>
            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span>

            logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                <span class="token keyword">yield</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">secret2mw</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> v<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># logger.debug(v)</span>
        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token comment"># logger.debug(v.split(&quot;&amp;#&quot;))</span>
        <span class="token keyword">for</span> s <span class="token keyword">in</span> v<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;&amp;#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> s<span class="token punctuation">:</span>
                <span class="token comment"># logger.debug(&#39;0&#39; + s)</span>
                res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>font<span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_position_info</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">convert_font</span><span class="token punctuation">(</span>jd<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> jd<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token comment"># logger.debug(str(type(v)))</span>
                <span class="token keyword">if</span> <span class="token string">&#39;dict&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    jd<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> convert_font<span class="token punctuation">(</span>v<span class="token punctuation">)</span>
                <span class="token keyword">elif</span> <span class="token string">&#39;list&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                    <span class="token keyword">for</span> s <span class="token keyword">in</span> v<span class="token punctuation">:</span>
                        <span class="token keyword">if</span> <span class="token string">&#39;dict&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>convert_font<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token comment"># elif &#39;list&#39; in str(type(s)):</span>
                        <span class="token comment">#     temp.append(s)</span>
                        <span class="token keyword">elif</span> <span class="token string">&#39;str&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token string">&#39;&amp;#&#39;</span> <span class="token keyword">in</span> s<span class="token punctuation">:</span>
                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>secret2mw<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">else</span><span class="token punctuation">:</span>
                            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
                    jd<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp
                <span class="token keyword">elif</span> <span class="token string">&#39;str&#39;</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    temp <span class="token operator">=</span> v
                    <span class="token keyword">if</span> <span class="token string">&quot;&amp;#&quot;</span> <span class="token keyword">in</span> v<span class="token punctuation">:</span>
                        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>secret2mw<span class="token punctuation">(</span>v<span class="token punctuation">)</span>
                    <span class="token comment"># logger.debug(temp)</span>
                    jd<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp
            <span class="token keyword">return</span> jd

        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> data <span class="token keyword">in</span> self<span class="token punctuation">.</span>get_position_info_raw_data<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span>deepcopy<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
            ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span>convert_font<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>

        logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span>ans<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    sxs <span class="token operator">=</span> Shixisheng<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;产品&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    sxs<span class="token punctuation">.</span>get_position_info<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function f(y,w){const o=s("ExternalLinkIcon"),e=s("Mermaid");return i(),u("div",null,[m,a("p",null,[t("然后下载字体文件，使用软件"),a("a",b,[t("http://www.fontcreator.com/打开"),p(o)])]),g,p(e,{id:"mermaid-62",code:"eJxLL0osyFDwCeJy1DA1NzM20uRy0jCoSDUwALKcNdSUISxHXd2M1ApdXTsnLiddXQMdNWUg25kLAMPKDYI="}),q])}const x=c(v,[["render",f],["__file","01-shixiseng-字体反爬.html.vue"]]);export{x as default};
