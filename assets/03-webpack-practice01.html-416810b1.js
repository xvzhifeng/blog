import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as e}from"./app-4e9ca916.js";const p="/assets/image-20231128004932272-db43efb9.png",i="/assets/image-20231128005345433-82000503.png",t="/assets/image-20231128005529014-02362e99.png",o="/assets/image-20231128010031976-a2decee7.png",c="/assets/image-20231128010133305-d55c8f7c.png",l="/assets/image-20231128010608555-c5df9479.png",r="/assets/image-20231128010732693-3c88f2c5.png",u={},d=e('<h1 id="webpack-练习专题-01" tabindex="-1"><a class="header-anchor" href="#webpack-练习专题-01" aria-hidden="true">#</a> Webpack 练习专题 01</h1><p>前言：</p><p>练习webpack 逆向</p><h2 id="_1、网站分析" tabindex="-1"><a class="header-anchor" href="#_1、网站分析" aria-hidden="true">#</a> 1、网站分析</h2><p>网站<code>YUhSMGNITTZMeTl6ZVc1amIyNW9kV0l1WTI5elkyOXphR2x3Y0dsdVp5NWpiMjB2eHV6aGlmeHV6aGlmDQo=</code></p><figure><img src="'+p+`" alt="image-20231128004932272" tabindex="0" loading="lazy"><figcaption>image-20231128004932272</figcaption></figure><p>通过分析可知，登陆请求需要以下参数</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>params = <span class="token punctuation">{</span>
    <span class="token property">&quot;FECU&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8Lxcf5ADJ6bRiyAr0LR9yUX5DsYrSNA6a/skpauFFfZeSjbh2k0Fs4b45LvEqB1Ffk57xQ+XW215j0pG2AXuNogMmD551LWXPJlEy0hmjZMMTjZtJweKRHjFsIn6aTi+J6FmLll/zSff5z4mlniR19kcy5oPAgLeeOTNwIvp0c9NFqUBgYQfZC6DUT9hCCfL41&quot;</span>
<span class="token punctuation">}</span>
data = <span class="token punctuation">{</span>
    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Iz1d05p7YI1+AY+xW+WLhnLBbmqpiC0tSA3gZ0VVwxyfS6gdZF0scjLPlZyd1nq1Fc22rBtGcCV1cBcA+jl4rqdDc4frW6NVqc5P6SG3+mhpARwDUGiuGz/SeuIj3mgs2aYu5x9p4KAhGj9zANg0MK2mcMAVNdiWcg0g1hZgy3YR2rwimJ40EYZJu4r8eLoV2ZiGRlk0aG6Ja7z1q2iFrrQYVdIb0ANaYf1MzFJc5gQa5ZUSbUgb07agCWhvAFx2jbM7LICBTSpV56IqN4+4pKMOuARdNsOLmlmPiEE0PeWDmM5hlchg+t3ChH5hutQJp0OGStszYIqaUOScEzvAMQ==&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;captcha&quot;</span><span class="token operator">:</span> <span class="token string">&quot;54645&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中需要逆向的参数为</p><ul><li>&quot;FECU&quot; <ul><li>需要逆向，本次主要学习webpack，下次再解</li></ul></li><li>&quot;password&quot; <ul><li>这次逆向的主角</li></ul></li></ul><h2 id="_2、确定加密参数-定位" tabindex="-1"><a class="header-anchor" href="#_2、确定加密参数-定位" aria-hidden="true">#</a> 2、确定加密参数，定位</h2><p>通过上面分析，我们需要解决password的加密算法</p><figure><img src="`+i+'" alt="image-20231128005345433" tabindex="0" loading="lazy"><figcaption>image-20231128005345433</figcaption></figure><p>通过启动器，给出的文件位置，每个尝试可以得出以下可疑位置</p><figure><img src="'+t+'" alt="image-20231128005529014" tabindex="0" loading="lazy"><figcaption>image-20231128005529014</figcaption></figure><p>其中password加密为<code>password: Object(o.a)(t),</code></p><p>其中的o为 <code>o = n(&quot;MuMZ&quot;)</code></p><p>至此定位结束，可以得到我们需要得到的函数为<code>n(&quot;MuMZ&quot;)</code></p><p><strong>总结以下webpack特征</strong>：</p><ul><li>n函数，传入数字或者字符串</li><li>文件名包含chunk</li><li>文件开头有webpackJsonp</li></ul><h2 id="_3、逆向加密参数" tabindex="-1"><a class="header-anchor" href="#_3、逆向加密参数" aria-hidden="true">#</a> 3、逆向加密参数</h2><p>通过以上特征可以得出该网站属于webpack类型</p><p><strong>webpack解决方法：</strong></p><ul><li>抠出加载器</li><li>模块</li></ul><h3 id="_3-1-定位加载器-loader" tabindex="-1"><a class="header-anchor" href="#_3-1-定位加载器-loader" aria-hidden="true">#</a> 3.1 定位加载器（loader）</h3><h4 id="查看启动器-所有的文件-是否有自启动函数" tabindex="-1"><a class="header-anchor" href="#查看启动器-所有的文件-是否有自启动函数" aria-hidden="true">#</a> <strong>查看启动器，所有的文件，是否有自启动函数</strong></h4><figure><img src="'+o+'" alt="image-20231128010031976" tabindex="0" loading="lazy"><figcaption>image-20231128010031976</figcaption></figure><p>未找到加载器</p><h4 id="查看source界面-所有的js文件" tabindex="-1"><a class="header-anchor" href="#查看source界面-所有的js文件" aria-hidden="true">#</a> 查看source界面，所有的js文件</h4><figure><img src="'+c+'" alt="image-20231128010133305" tabindex="0" loading="lazy"><figcaption>image-20231128010133305</figcaption></figure><p>在查看的过程中检索关键字<code>webpackJsonp</code></p><p>在<code>index</code>中发现自启动函数，确定启动器，将启动代码抠出放入文件<code>index.js</code></p><p>注意该文件在<code>html</code>中<code>JS</code>代码在<code>&lt;script&gt; &lt;/script&gt;</code>中，别找错代码，不能全部复制</p><p>至此加载器，获取完成。</p><h3 id="_3-2-确定所需模块-加载" tabindex="-1"><a class="header-anchor" href="#_3-2-确定所需模块-加载" aria-hidden="true">#</a> 3.2 确定所需模块，加载</h3><p>通过以上定位我们得知加密函数在<code>app.js</code>中，可知这个模块是我们需要的，将此模块的代码全部拷贝，访问本地<code>app.js</code>中，</p><p>运行报错，</p><figure><img src="'+l+`" alt="image-20231128010608555" tabindex="0" loading="lazy"><figcaption>image-20231128010608555</figcaption></figure><p>将在报错位置添加<code>console.log(c)</code></p><p>可以看出我们想要的函数并没有，应该是模块没有加载完全，</p><p>通过分析启动器所涉及的模块，全部加载。</p><ul><li>app.js</li><li>chunk-lib.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./app.js&quot;</span><span class="token punctuation">)</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./chunk-lib.js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-组装" tabindex="-1"><a class="header-anchor" href="#_3-3-组装" aria-hidden="true">#</a> 3.3 组装</h3><p>通过以上分析我们得到了以下js文件</p><ul><li>index.js <ul><li>loader</li></ul></li><li>app.js <ul><li>model</li></ul></li><li>chunk-lib.js <ul><li>model</li></ul></li></ul><p>我们需要在loader中加载模块,并且定义 <code>fff01</code>存储其中的<code>n</code>函数也就是<code>f</code></p><p><code>index.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window <span class="token operator">=</span> global
<span class="token keyword">var</span> fff01 <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./app.js&quot;</span><span class="token punctuation">)</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./chunk-lib.js&quot;</span><span class="token punctuation">)</span>

<span class="token operator">...</span>

 f<span class="token punctuation">.</span><span class="token function-variable function">oe</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> c
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
 fff01 <span class="token operator">=</span> f<span class="token punctuation">;</span>
 <span class="token keyword">var</span> d <span class="token operator">=</span> window<span class="token punctuation">.</span>webpackJsonp <span class="token operator">=</span> window<span class="token punctuation">.</span>webpackJsonp <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 b <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
 <span class="token operator">...</span>
 
<span class="token keyword">function</span> <span class="token function">encodePassword</span><span class="token punctuation">(</span><span class="token parameter">password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fff01</span><span class="token punctuation">(</span><span class="token string">&quot;MuMZ&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="image-20231128010732693" tabindex="0" loading="lazy"><figcaption>image-20231128010732693</figcaption></figure><p>得到加密结果</p><p><strong>备注：文章仅供学习用途，如有侵权，请联系删除</strong></p>',52),k=[d];function g(m,f){return a(),s("div",null,k)}const h=n(u,[["render",g],["__file","03-webpack-practice01.html.vue"]]);export{h as default};
