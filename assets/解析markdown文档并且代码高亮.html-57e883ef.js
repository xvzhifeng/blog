import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,b as s,d as n,f as e,a as t}from"./app-4e9ca916.js";const i={},r=t(`<h2 id="解析markdown文档并且代码高亮" tabindex="-1"><a class="header-anchor" href="#解析markdown文档并且代码高亮" aria-hidden="true">#</a> 解析markdown文档并且代码高亮</h2><p><strong>前言：</strong></p><p>安装如下包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i marked
<span class="token function">npm</span> i highlight.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),u={href:"https://marked.js.org/using_advanced",target:"_blank",rel:"noopener noreferrer"},k={href:"https://highlightjs.org/usage/",target:"_blank",rel:"noopener noreferrer"},d=t(`<h3 id="_1、使用说明" tabindex="-1"><a class="header-anchor" href="#_1、使用说明" aria-hidden="true">#</a> 1、使用说明</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// Create reference instance</span>
import <span class="token punctuation">{</span> marked <span class="token punctuation">}</span> from &#39;marked&#39;;

<span class="token comment">// Set options</span>
<span class="token comment">// \`highlight\` example uses https://highlightjs.org</span>
marked.setOptions(<span class="token punctuation">{</span>
  renderer<span class="token operator">:</span> new marked.Renderer()<span class="token punctuation">,</span>
  highlight<span class="token operator">:</span> function(code<span class="token punctuation">,</span> lang) <span class="token punctuation">{</span>
    const hljs = require(&#39;highlight.js&#39;);
    const language = hljs.getLanguage(lang) ? lang <span class="token operator">:</span> &#39;plaintext&#39;;
    return hljs.highlight(code<span class="token punctuation">,</span> <span class="token punctuation">{</span> language <span class="token punctuation">}</span>).value;
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  langPrefix<span class="token operator">:</span> &#39;hljs language-&#39;<span class="token punctuation">,</span> <span class="token comment">// highlight.js css expects a top-level &#39;hljs&#39; class.</span>
  pedantic<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  gfm<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  breaks<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  sanitize<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  smartLists<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  smartypants<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  xhtml<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>);

<span class="token comment">// Compile</span>
console.log(marked.parse(markdownString));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[注] 实例来自官网</p><h3 id="_2、完整代码" tabindex="-1"><a class="header-anchor" href="#_2、完整代码" aria-hidden="true">#</a> 2、完整代码</h3><p>当前代码应用于next.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> marked <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;marked&#39;</span>
<span class="token keyword">import</span> hljs <span class="token keyword">from</span> <span class="token string">&quot;highlight.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getBlogDataByPath</span><span class="token punctuation">(</span><span class="token parameter">fullPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    marked<span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">renderer</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">marked<span class="token punctuation">.</span>Renderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function-variable function">highlight</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> lang</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hljs<span class="token punctuation">.</span><span class="token function">getLanguage</span><span class="token punctuation">(</span>lang<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">const</span> language <span class="token operator">=</span> hljs<span class="token punctuation">.</span><span class="token function">getLanguage</span><span class="token punctuation">(</span>lang<span class="token punctuation">)</span> <span class="token operator">?</span> lang <span class="token operator">:</span> <span class="token string">&#39;plaintext&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> hljs<span class="token punctuation">.</span><span class="token function">highlight</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">{</span> language <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">langPrefix</span><span class="token operator">:</span> <span class="token string">&#39;hljs language-&#39;</span><span class="token punctuation">,</span> <span class="token comment">// highlight.js css expects a top-level &#39;hljs&#39; class.</span>
        <span class="token literal-property property">pedantic</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">gfm</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">breaks</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">sanitize</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">smartLists</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">smartypants</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">xhtml</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> fileContents <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> matterResult <span class="token operator">=</span> <span class="token function">matter</span><span class="token punctuation">(</span>fileContents<span class="token punctuation">)</span>
    <span class="token keyword">const</span> contentHtml <span class="token operator">=</span> marked<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fileContents<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> fullPath<span class="token punctuation">,</span>
        contentHtml<span class="token punctuation">,</span>
        <span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span> fileContents<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>matterResult<span class="token punctuation">.</span>data
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function v(m,g){const a=o("ExternalLinkIcon");return l(),c("div",null,[r,s("p",null,[n("[marked 官方文档]("),s("a",u,[n("Using Advanced - Marked Documentation"),e(a)]),n(")")]),s("p",null,[n("[highlight 官方文档]("),s("a",k,[n("How to use highlight.js (highlightjs.org)"),e(a)]),n(")")]),d])}const f=p(i,[["render",v],["__file","解析markdown文档并且代码高亮.html.vue"]]);export{f as default};
