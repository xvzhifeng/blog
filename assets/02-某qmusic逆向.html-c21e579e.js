import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-4e9ca916.js";const p="/assets/image-20231126211519710-da74bdb1.png",e="/assets/image-20231126211649584-22915ead.png",o="/assets/image-20231126212308278-6a00f2dd.png",i="/assets/image-20231126212423824-9c88f6a2.png",c="/assets/image-20231126212657898-43d1da9c.png",l="/assets/image-20231126212722392-f905d399.png",u="/assets/image-20231126212912751-eae28fdb.png",r="/assets/image-20231126212931663-6b398843.png",d="/assets/image-20231126213047092-280a7fc2.png",k="/assets/image-20231126213758143-9ec5670f.png",g="/assets/image-20231126213905971-871787ea.png",m={},v=t('<h1 id="某qmusic-js逆向" tabindex="-1"><a class="header-anchor" href="#某qmusic-js逆向" aria-hidden="true">#</a> 某QMusic JS逆向</h1><p><strong>前言：</strong></p><p>学习webpack</p><h2 id="_1、网站分析" tabindex="-1"><a class="header-anchor" href="#_1、网站分析" aria-hidden="true">#</a> 1、网站分析</h2><h3 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h3><p>获取所有歌手，歌曲，歌词信息</p><h3 id="获取思路" tabindex="-1"><a class="header-anchor" href="#获取思路" aria-hidden="true">#</a> 获取思路</h3><p>获取所有歌手 - &gt; 所有歌手的歌</p><figure><img src="'+p+'" alt="image-20231126211519710" tabindex="0" loading="lazy"><figcaption>image-20231126211519710</figcaption></figure><p>在歌手查询页面，打开开发者调试工具，查询歌手名称，可以找到如图接口，对response进行分析，可以的到所有的歌手信息都在sigerlist中，</p><figure><img src="'+e+`" alt="image-20231126211649584" tabindex="0" loading="lazy"><figcaption>image-20231126211649584</figcaption></figure><p>歌手信息接口：<code>aHR0cHM6Ly91LnkucXEuY29tL2NnaS1iaW4vbXVzaWNzLmZjZw==</code></p><h2 id="_2、参数分析" tabindex="-1"><a class="header-anchor" href="#_2、参数分析" aria-hidden="true">#</a> 2、参数分析</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;_&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1700928356959&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;sign&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zzb65e97f06rgmgav1k88nragwb9xag77e40543&quot;</span>
<span class="token punctuation">}</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;comm&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;cv&quot;</span><span class="token punctuation">:</span> <span class="token number">4747474</span><span class="token punctuation">,</span>
        <span class="token string">&quot;ct&quot;</span><span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
        <span class="token string">&quot;format&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;inCharset&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;outCharset&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;notice&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">&quot;platform&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;yqq.json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;needNewCode&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">&quot;uin&quot;</span><span class="token punctuation">:</span> <span class="token number">744971047</span><span class="token punctuation">,</span>
        <span class="token string">&quot;g_tk_new_20200303&quot;</span><span class="token punctuation">:</span> <span class="token number">5381</span><span class="token punctuation">,</span>
        <span class="token string">&quot;g_tk&quot;</span><span class="token punctuation">:</span> <span class="token number">5381</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;req_1&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;module&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;music.musichallSinger.SingerList&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;method&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;GetSingerListIndex&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;param&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;area&quot;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sex&quot;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token string">&quot;genre&quot;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token string">&quot;index&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string">&quot;sin&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string">&quot;cur_page&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过分析可知：</p><ul><li>&quot;_&quot; <ul><li>13位时间搓</li><li><code>int(time.time()*1000)</code></li><li>可以忽略，不修改也能请求</li></ul></li><li>&quot;sign&quot; <ul><li>需要逆向生成</li></ul></li></ul><p>data中的参数，通过切换不同歌手的检索信息分析可知</p><ul><li>index <ul><li>1-27</li><li>为A-Z的开头的歌手</li></ul></li><li>其余参数保持不变</li></ul><h2 id="_3、参数sign逆向生成" tabindex="-1"><a class="header-anchor" href="#_3、参数sign逆向生成" aria-hidden="true">#</a> 3、参数Sign逆向生成</h2><p>由上文可知，需要逆向的参数为sign，以及接口信息，通过initiator进行定位</p><figure><img src="`+o+'" alt="image-20231126212308278" tabindex="0" loading="lazy"><figcaption>image-20231126212308278</figcaption></figure><p>定位到源文件后，可以直接搜索关键字sign</p><figure><img src="'+i+'" alt="image-20231126212423824" tabindex="0" loading="lazy"><figcaption>image-20231126212423824</figcaption></figure><p>通过对以上代码分析，可知入参为<code>t.data</code>,加密函数为<code>o</code></p><ul><li>t.data <ul><li>为上文分析的data</li></ul></li><li>o <ul><li>n(350).default</li></ul></li></ul><p>在此处打上断点，查看n以及n(350).default分别是什么</p><figure><img src="'+c+'" alt="image-20231126212657898" tabindex="0" loading="lazy"><figcaption>image-20231126212657898</figcaption></figure><p><strong>n</strong></p><p>定位到如下函数</p><figure><img src="'+l+`" alt="image-20231126212722392" tabindex="0" loading="lazy"><figcaption>image-20231126212722392</figcaption></figure><p>可以得出该函数就是n，为了后续封装方便，我们定义全局变量，fsign等于改s方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> fsign <span class="token operator">=</span> <span class="token keyword">null</span>

<span class="token operator">...</span><span class="token punctuation">.</span>

f<span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token string">&quot;/ryqq/&quot;</span><span class="token punctuation">,</span>
f<span class="token punctuation">.</span><span class="token function-variable function">oe</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e
  <span class="token punctuation">}</span>
fsign <span class="token operator">=</span> f<span class="token punctuation">;</span>
<span class="token keyword">var</span> d <span class="token operator">=</span> window<span class="token punctuation">.</span>webpackJsonp <span class="token operator">=</span> window<span class="token punctuation">.</span>webpackJsonp <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> i <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过n(350)以及文件名中的&#39;chunk&#39;可以得出属于webpack类型。</p><p>对于webpack我们需要抠出加载器，以及其中的模块，</p><p><strong>加载器特征：有个匿名自启动函数</strong></p><figure><img src="`+u+'" alt="image-20231126212912751" tabindex="0" loading="lazy"><figcaption>image-20231126212912751</figcaption></figure><figure><img src="'+r+'" alt="image-20231126212931663" tabindex="0" loading="lazy"><figcaption>image-20231126212931663</figcaption></figure><p>通过以上开头和结尾的分析，符合加载器的特征，将加载整个代码复制出，放入runtime.js文件中</p><p><strong>n(350).default</strong></p><figure><img src="'+d+`" alt="image-20231126213047092" tabindex="0" loading="lazy"><figcaption>image-20231126213047092</figcaption></figure><p>根据以上加载器和模块在不同文件，可以得出是多文件的webpack，将该文件js全部考出，作为vendor.js</p><p>然后在加载器中导入该模块</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 导入方法</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./vendor&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>为了方便调用封装如下方法,可以放在文件的最外层</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getSign</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token function">fsign</span><span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default
    <span class="token keyword">return</span> <span class="token function">o</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检测，输入和网页相同搞的参数，得出的sign不同</p><p>一般出现如上情况，大概率是环境检测</p><p>补上比较常见的环境</p><ul><li>document</li><li>navigator</li><li>window</li><li>location</li></ul><p>以上环境可以在浏览器command出，查看复制出来即可</p><figure><img src="`+k+`" alt="image-20231126213758143" tabindex="0" loading="lazy"><figcaption>image-20231126213758143</figcaption></figure><p>以下是完整代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> fsign <span class="token operator">=</span> <span class="token keyword">null</span>
window <span class="token operator">=</span> self <span class="token operator">=</span> global
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./vendor&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//document = {}</span>
navigator <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">appCodeName</span><span class="token operator">:</span> <span class="token string">&quot;Mozilla&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">appName</span><span class="token operator">:</span> <span class="token string">&quot;Netscape&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">appVersion</span><span class="token operator">:</span> <span class="token string">&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;</span><span class="token punctuation">,</span>
<span class="token literal-property property">userAgent</span><span class="token operator">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;</span>
<span class="token punctuation">}</span>
location <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;ancestorOrigins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;href&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://y.qq.com/n/ryqq/singer_list?index=1&amp;genre=-100&amp;sex=-100&amp;area=-100&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;origin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://y.qq.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https:&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;y.qq.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;hostname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;y.qq.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;pathname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/n/ryqq/singer_list&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;search&quot;</span><span class="token operator">:</span> <span class="token string">&quot;?index=1&amp;genre=-100&amp;sex=-100&amp;area=-100&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完工</p><figure><img src="`+g+'" alt="image-20231126213905971" tabindex="0" loading="lazy"><figcaption>image-20231126213905971</figcaption></figure><p><strong>备注：文章仅供学习用途，如有侵权，请联系删除</strong></p>',56),q=[v];function b(f,h){return s(),a("div",null,q)}const x=n(m,[["render",b],["__file","02-某qmusic逆向.html.vue"]]);export{x as default};
