import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as p}from"./app-4e9ca916.js";const t="/assets/image-20231129013709427-2b0fd019.png",o="/assets/image-20231129013857403-43613f11.png",e="/assets/image-20231129014333756-1bab5981.png",c="/assets/image-20231129014630986-6dee942d.png",u="/assets/image-20231129014845340-fdae4ed9.png",i="/assets/image-20231129014905847-d3b8c6cb.png",l="/assets/image-20231129015040996-6675365a.png",k="/assets/image-20231129015114176-ac321bbe.png",r="/assets/image-20231129015149591-0311890c.png",d="/assets/image-20231129015730861-dea515a8.png",v="/assets/image-20231129020212380-de9fdd4a.png",m="/assets/image-20231129020308733-433dd9c0.png",g="/assets/image-20231129020525612-44eaee60.png",b={},f=p('<h1 id="webpack-练习专题-02" tabindex="-1"><a class="header-anchor" href="#webpack-练习专题-02" aria-hidden="true">#</a> Webpack 练习专题 02</h1><p>前言：</p><p>练习webpack 逆向</p><h2 id="_1、网站分析" tabindex="-1"><a class="header-anchor" href="#_1、网站分析" aria-hidden="true">#</a> 1、网站分析</h2><p>网站：<code>YUhSMGNITTZMeTluWjNwNVpuY3VabW91WjI5MkxtTnVMMmx1WkdWNEwyNWxkMHhwYzNRdlAzUjVjR1U5TVRNPQ==</code></p><p>通过刷新页面可以看到返回的data是加密参数，需要还原。</p><figure><img src="'+t+'" alt="image-20231129013709427" tabindex="0" loading="lazy"><figcaption>image-20231129013709427</figcaption></figure><p>观察header</p><figure><img src="'+o+'" alt="image-20231129013857403" tabindex="0" loading="lazy"><figcaption>image-20231129013857403</figcaption></figure><p>通过不同的请求header对比可以确定<code>Portal-Sign</code>是需要逆向的参数</p><p>需要逆向的参数分别是：</p><ul><li>header <ul><li><code>Portal-Sign</code></li></ul></li><li>response <ul><li><code>data</code></li></ul></li></ul><h2 id="_2、加密位置定位" tabindex="-1"><a class="header-anchor" href="#_2、加密位置定位" aria-hidden="true">#</a> 2、加密位置定位</h2><p>[注] 本网站通过启动器无法定位加解密位置。</p><p><strong>定位方法</strong></p><h3 id="_2-1-header加密-搜索关键字" tabindex="-1"><a class="header-anchor" href="#_2-1-header加密-搜索关键字" aria-hidden="true">#</a> 2.1 <strong>header加密，搜索关键字</strong></h3><p>从需要的参数入手，可以观察到header需要加密的名称为<code>Portal-Sign</code>, 直接搜索关键字</p><figure><img src="'+e+'" alt="image-20231129014333756" tabindex="0" loading="lazy"><figcaption>image-20231129014333756</figcaption></figure><p>可以确定<code>Portal-Sign</code>的加密函数为<code>f.getSign(e)</code>, 打断点，查看函数具体内容，方便下一步还原。</p><h3 id="_2-2-response解密-搜索关键字json-parse" tabindex="-1"><a class="header-anchor" href="#_2-2-response解密-搜索关键字json-parse" aria-hidden="true">#</a> 2.2 <strong>response解密，搜索关键字<code>JSON.parse</code></strong></h3><figure><img src="'+c+'" alt="image-20231129014630986" tabindex="0" loading="lazy"><figcaption>image-20231129014630986</figcaption></figure><p>可以确定<code>data</code>的解密函数为<code>b(e.data)</code>, 打断点，查看函数具体内容，方便下一步还原。</p><h2 id="_3、逆向加密参数" tabindex="-1"><a class="header-anchor" href="#_3、逆向加密参数" aria-hidden="true">#</a> 3、逆向加密参数</h2><h3 id="_3-1-portal-sign还原" tabindex="-1"><a class="header-anchor" href="#_3-1-portal-sign还原" aria-hidden="true">#</a> 3.1 <code>Portal-Sign</code>还原</h3><p>第一步在入口位置打断点</p><figure><img src="'+u+'" alt="image-20231129014845340" tabindex="0" loading="lazy"><figcaption>image-20231129014845340</figcaption></figure><p>查看具体函数， 可以得出函数为如下</p><figure><img src="'+i+`" alt="image-20231129014905847" tabindex="0" loading="lazy"><figcaption>image-20231129014905847</figcaption></figure><p>抠出该函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token keyword">in</span> t<span class="token punctuation">)</span>
                <span class="token string">&quot;&quot;</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">delete</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> n <span class="token operator">=</span> r<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">l</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">u</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中r[&quot;a&quot;]是常量</p><figure><img src="`+l+'" alt="image-20231129015040996" tabindex="0" loading="lazy"><figcaption>image-20231129015040996</figcaption></figure><p>直接替换，运行</p><figure><img src="'+k+'" alt="image-20231129015114176" tabindex="0" loading="lazy"><figcaption>image-20231129015114176</figcaption></figure><p><code>l</code>未定义，查看函数位置上下文，查找<code>l</code></p><figure><img src="'+r+`" alt="image-20231129015149591" tabindex="0" loading="lazy"><figcaption>image-20231129015149591</figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">||</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> i
                    <span class="token punctuation">}</span> <span class="token keyword">else</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> n
        <span class="token punctuation">}</span>
        <span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token keyword">in</span> t<span class="token punctuation">)</span>
                <span class="token string">&quot;&quot;</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">delete</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token string">&#39;B3978D054A72A7002063637CCDF6B2E5&#39;</span> <span class="token operator">+</span> <span class="token function">l</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">u</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在运行发现<code>s</code>不存在，继续查看上下文，抠出<code>s</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">||</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> i
                    <span class="token punctuation">}</span> <span class="token keyword">else</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> n
        <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token keyword">in</span> t<span class="token punctuation">)</span>
     <span class="token string">&quot;&quot;</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">delete</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token string">&#39;B3978D054A72A7002063637CCDF6B2E5&#39;</span> <span class="token operator">+</span> <span class="token function">l</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token function">u</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行提示<code>u(n)</code>不存在，接着抠出<code>u</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">||</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> i
                    <span class="token punctuation">}</span> <span class="token keyword">else</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> n
        <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> u <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">&quot;8237&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token keyword">in</span> t<span class="token punctuation">)</span>
     <span class="token string">&quot;&quot;</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">delete</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token string">&#39;B3978D054A72A7002063637CCDF6B2E5&#39;</span> <span class="token operator">+</span> <span class="token function">l</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token function">u</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>n(&quot;8237&quot;)</code>符合webpack特征，需要用到webpack的模块<code>&#39;8237&#39;</code>,在文件中检索，然后相关模块导入</p><p><strong>webpack还原方法</strong></p><ul><li>扣加载器 <ul><li>自启动函数</li></ul></li><li>模块 <ul><li><code>window[&quot;webpackJsonp&quot;]</code>开头</li></ul></li></ul><p>通过对于网站的观察,该网站一共有三个js文件，其中app是启动器。</p><figure><img src="`+d+`" alt="image-20231129015730861" tabindex="0" loading="lazy"><figcaption>image-20231129015730861</figcaption></figure><p>组装webpack</p><p>文件结构如下，新建如下三个文件，分别将网页中js复制到以下文件中</p><ul><li>app.js</li><li>chunk.js</li><li>chunk-lib.js</li></ul><p>在启动器中，将<code>n</code>也就是启动器分配函数，保存到全局变量，方便后续使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window <span class="token operator">=</span> global
<span class="token keyword">var</span> loader_
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./chunk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./chunk-vendor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

···
<span class="token keyword">var</span> f <span class="token operator">=</span> l<span class="token punctuation">;</span>
o<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;chunk-vendors&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
loader_ <span class="token operator">=</span> u
<span class="token operator">...</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整个webpack模块加载完成，后续data还原也可以用这个webpack代码</p><p>，然后完善上面代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">||</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> i
                    <span class="token punctuation">}</span> <span class="token keyword">else</span>
                        n <span class="token operator">+=</span> e<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">+</span> t<span class="token punctuation">[</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> n
        <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> u <span class="token operator">=</span> <span class="token function">loader_</span><span class="token punctuation">(</span><span class="token string">&quot;8237&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token keyword">in</span> t<span class="token punctuation">)</span>
     <span class="token string">&quot;&quot;</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">delete</span> t<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token string">&#39;B3978D054A72A7002063637CCDF6B2E5&#39;</span> <span class="token operator">+</span> <span class="token function">l</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token function">u</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试运行成功</p><figure><img src="`+v+'" alt="image-20231129020212380" tabindex="0" loading="lazy"><figcaption>image-20231129020212380</figcaption></figure><h3 id="_3-2-data还原" tabindex="-1"><a class="header-anchor" href="#_3-2-data还原" aria-hidden="true">#</a> 3.2 <code>data</code>还原</h3><p>在data还原入口处，打断点，查看具体函数</p><figure><img src="'+m+`" alt="image-20231129020308733" tabindex="0" loading="lazy"><figcaption>image-20231129020308733</figcaption></figure><p>扣出以下代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> e <span class="token operator">=</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
              <span class="token punctuation">,</span> n <span class="token operator">=</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token string">&quot;i&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
              <span class="token punctuation">,</span> a <span class="token operator">=</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">iv</span><span class="token operator">:</span> n<span class="token punctuation">,</span>
                <span class="token literal-property property">mode</span><span class="token operator">:</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
                <span class="token literal-property property">padding</span><span class="token operator">:</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行，缺什么补什么，基本上都在该函数上面位置,</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token function">loader_</span><span class="token punctuation">(</span><span class="token string">&quot;3452&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> h <span class="token operator">=</span> loader_<span class="token punctuation">.</span><span class="token function">n</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> e <span class="token operator">=</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;EB444973714E4A40876CE66BE45D5930&#39;</span><span class="token punctuation">)</span>
              <span class="token punctuation">,</span> n <span class="token operator">=</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;B5A8904209931867&#39;</span><span class="token punctuation">)</span>
              <span class="token punctuation">,</span> a <span class="token operator">=</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">iv</span><span class="token operator">:</span> n<span class="token punctuation">,</span>
                <span class="token literal-property property">mode</span><span class="token operator">:</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
                <span class="token literal-property property">padding</span><span class="token operator">:</span> h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>a<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的loader_，是上一个参数还原的webpack启动器，两个参数可以通用，测试结果</p><figure><img src="`+g+'" alt="image-20231129020525612" tabindex="0" loading="lazy"><figcaption>image-20231129020525612</figcaption></figure><p><strong>备注：文章仅供学习用途，如有侵权，请联系删除</strong></p>',66),y=[f];function w(h,_){return s(),a("div",null,y)}const x=n(b,[["render",w],["__file","04-webpack-practice02.html.vue"]]);export{x as default};
